<!DOCTYPE html><html lang="en"><head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create Resume - MyResumo</title>
    
    <!-- Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        primary: {
                            50: '#f0f9ff',
                            100: '#e0f2fe',
                            200: '#bae6fd',
                            300: '#7dd3fc',
                            400: '#38bdf8',
                            500: '#0ea5e9',
                            600: '#0284c7',
                            700: '#0369a1',
                            800: '#075985',
                            900: '#0c4a6e',
                        },
                    }
                }
            }
        }
    </script>
    
    <!-- Alpine.js -->
    <script defer="" src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js"></script>
    
    <!-- Style for x-cloak to prevent flashing during Alpine initialization -->
    <style>
        [x-cloak] { display: none !important; }
    </style>
    
    <!-- Custom CSS -->
    <link rel="stylesheet" href="http://localhost:8081/static/css/style.css">
    
    <!-- Additional head content -->
    
<style>*, ::before, ::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }/* ! tailwindcss v3.4.16 | MIT License | https://tailwindcss.com */*,::after,::before{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}::after,::before{--tw-content:''}:host,html{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;tab-size:4;font-family:ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;font-feature-settings:normal;font-variation-settings:normal;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}button,input:where([type=button]),input:where([type=reset]),input:where([type=submit]){-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}menu,ol,ul{list-style:none;margin:0;padding:0}dialog{padding:0}textarea{resize:vertical}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}[role=button],button{cursor:pointer}:disabled{cursor:default}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]:where(:not([hidden=until-found])){display:none}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0}.absolute{position:absolute}.relative{position:relative}.inset-0{inset:0px}.mx-1{margin-left:0.25rem;margin-right:0.25rem}.mx-auto{margin-left:auto;margin-right:auto}.-mr-2{margin-right:-0.5rem}.mb-1{margin-bottom:0.25rem}.mb-10{margin-bottom:2.5rem}.mb-12{margin-bottom:3rem}.mb-2{margin-bottom:0.5rem}.mb-3{margin-bottom:0.75rem}.mb-4{margin-bottom:1rem}.mb-5{margin-bottom:1.25rem}.mb-6{margin-bottom:1.5rem}.mb-8{margin-bottom:2rem}.ml-2{margin-left:0.5rem}.ml-3{margin-left:0.75rem}.ml-4{margin-left:1rem}.ml-6{margin-left:1.5rem}.mr-1{margin-right:0.25rem}.mr-2{margin-right:0.5rem}.mr-3{margin-right:0.75rem}.mr-6{margin-right:1.5rem}.mt-1{margin-top:0.25rem}.mt-2{margin-top:0.5rem}.mt-3{margin-top:0.75rem}.mt-4{margin-top:1rem}.mt-6{margin-top:1.5rem}.mt-8{margin-top:2rem}.block{display:block}.inline-block{display:inline-block}.flex{display:flex}.inline-flex{display:inline-flex}.grid{display:grid}.hidden{display:none}.h-12{height:3rem}.h-16{height:4rem}.h-2{height:0.5rem}.h-20{height:5rem}.h-24{height:6rem}.h-28{height:7rem}.h-4{height:1rem}.h-48{height:12rem}.h-5{height:1.25rem}.h-6{height:1.5rem}.h-8{height:2rem}.h-full{height:100%}.min-h-screen{min-height:100vh}.w-12{width:3rem}.w-2{width:0.5rem}.w-20{width:5rem}.w-24{width:6rem}.w-28{width:7rem}.w-4{width:1rem}.w-5{width:1.25rem}.w-6{width:1.5rem}.w-8{width:2rem}.w-full{width:100%}.w-16{width:4rem}.max-w-2xl{max-width:42rem}.max-w-5xl{max-width:64rem}.max-w-7xl{max-width:80rem}.max-w-md{max-width:28rem}.flex-1{flex:1 1 0%}.flex-shrink-0{flex-shrink:0}.flex-grow{flex-grow:1}.scale-110{--tw-scale-x:1.1;--tw-scale-y:1.1;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.transform{transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}@keyframes pulse{50%{opacity:.5}}.animate-pulse{animation:pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite}@keyframes spin{to{transform:rotate(360deg)}}.animate-spin{animation:spin 1s linear infinite}.cursor-pointer{cursor:pointer}.cursor-not-allowed{cursor:not-allowed}.appearance-none{-webkit-appearance:none;appearance:none}.grid-cols-1{grid-template-columns:repeat(1, minmax(0, 1fr))}.flex-col{flex-direction:column}.flex-wrap{flex-wrap:wrap}.items-center{align-items:center}.justify-end{justify-content:flex-end}.justify-center{justify-content:center}.justify-between{justify-content:space-between}.gap-2{gap:0.5rem}.gap-3{gap:0.75rem}.gap-4{gap:1rem}.gap-6{gap:1.5rem}.gap-8{gap:2rem}.space-y-1 > :not([hidden]) ~ :not([hidden]){--tw-space-y-reverse:0;margin-top:calc(0.25rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(0.25rem * var(--tw-space-y-reverse))}.space-y-3 > :not([hidden]) ~ :not([hidden]){--tw-space-y-reverse:0;margin-top:calc(0.75rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(0.75rem * var(--tw-space-y-reverse))}.space-y-4 > :not([hidden]) ~ :not([hidden]){--tw-space-y-reverse:0;margin-top:calc(1rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(1rem * var(--tw-space-y-reverse))}.overflow-hidden{overflow:hidden}.overflow-y-auto{overflow-y:auto}.whitespace-nowrap{white-space:nowrap}.rounded-full{border-radius:9999px}.rounded-lg{border-radius:0.5rem}.rounded-md{border-radius:0.375rem}.border{border-width:1px}.border-2{border-width:2px}.border-b-2{border-bottom-width:2px}.border-l-4{border-left-width:4px}.border-r-4{border-right-width:4px}.border-t-4{border-top-width:4px}.border-dashed{border-style:dashed}.border-blue-100{--tw-border-opacity:1;border-color:rgb(219 234 254 / var(--tw-border-opacity, 1))}.border-blue-500{--tw-border-opacity:1;border-color:rgb(59 130 246 / var(--tw-border-opacity, 1))}.border-gray-200{--tw-border-opacity:1;border-color:rgb(229 231 235 / var(--tw-border-opacity, 1))}.border-gray-300{--tw-border-opacity:1;border-color:rgb(209 213 219 / var(--tw-border-opacity, 1))}.border-transparent{border-color:transparent}.border-opacity-80{--tw-border-opacity:0.8}.bg-blue-100{--tw-bg-opacity:1;background-color:rgb(219 234 254 / var(--tw-bg-opacity, 1))}.bg-blue-200{--tw-bg-opacity:1;background-color:rgb(191 219 254 / var(--tw-bg-opacity, 1))}.bg-blue-500{--tw-bg-opacity:1;background-color:rgb(59 130 246 / var(--tw-bg-opacity, 1))}.bg-blue-600{--tw-bg-opacity:1;background-color:rgb(37 99 235 / var(--tw-bg-opacity, 1))}.bg-gray-200{--tw-bg-opacity:1;background-color:rgb(229 231 235 / var(--tw-bg-opacity, 1))}.bg-gray-50{--tw-bg-opacity:1;background-color:rgb(249 250 251 / var(--tw-bg-opacity, 1))}.bg-green-100{--tw-bg-opacity:1;background-color:rgb(220 252 231 / var(--tw-bg-opacity, 1))}.bg-white{--tw-bg-opacity:1;background-color:rgb(255 255 255 / var(--tw-bg-opacity, 1))}.bg-gray-300{--tw-bg-opacity:1;background-color:rgb(209 213 219 / var(--tw-bg-opacity, 1))}.bg-gradient-to-br{background-image:linear-gradient(to bottom right, var(--tw-gradient-stops))}.bg-gradient-to-r{background-image:linear-gradient(to right, var(--tw-gradient-stops))}.from-amber-50{--tw-gradient-from:#fffbeb var(--tw-gradient-from-position);--tw-gradient-to:rgb(255 251 235 / 0) var(--tw-gradient-to-position);--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to)}.from-amber-500{--tw-gradient-from:#f59e0b var(--tw-gradient-from-position);--tw-gradient-to:rgb(245 158 11 / 0) var(--tw-gradient-to-position);--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to)}.from-blue-50{--tw-gradient-from:#eff6ff var(--tw-gradient-from-position);--tw-gradient-to:rgb(239 246 255 / 0) var(--tw-gradient-to-position);--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to)}.from-blue-500{--tw-gradient-from:#3b82f6 var(--tw-gradient-from-position);--tw-gradient-to:rgb(59 130 246 / 0) var(--tw-gradient-to-position);--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to)}.from-gray-100{--tw-gradient-from:#f3f4f6 var(--tw-gradient-from-position);--tw-gradient-to:rgb(243 244 246 / 0) var(--tw-gradient-to-position);--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to)}.from-green-50{--tw-gradient-from:#f0fdf4 var(--tw-gradient-from-position);--tw-gradient-to:rgb(240 253 244 / 0) var(--tw-gradient-to-position);--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to)}.from-green-500{--tw-gradient-from:#22c55e var(--tw-gradient-from-position);--tw-gradient-to:rgb(34 197 94 / 0) var(--tw-gradient-to-position);--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to)}.from-indigo-500{--tw-gradient-from:#6366f1 var(--tw-gradient-from-position);--tw-gradient-to:rgb(99 102 241 / 0) var(--tw-gradient-to-position);--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to)}.from-orange-500{--tw-gradient-from:#f97316 var(--tw-gradient-from-position);--tw-gradient-to:rgb(249 115 22 / 0) var(--tw-gradient-to-position);--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to)}.to-amber-600{--tw-gradient-to:#d97706 var(--tw-gradient-to-position)}.to-blue-600{--tw-gradient-to:#2563eb var(--tw-gradient-to-position)}.to-gray-200{--tw-gradient-to:#e5e7eb var(--tw-gradient-to-position)}.to-green-600{--tw-gradient-to:#16a34a var(--tw-gradient-to-position)}.to-indigo-50{--tw-gradient-to:#eef2ff var(--tw-gradient-to-position)}.to-indigo-600{--tw-gradient-to:#4f46e5 var(--tw-gradient-to-position)}.to-orange-50{--tw-gradient-to:#fff7ed var(--tw-gradient-to-position)}.to-orange-600{--tw-gradient-to:#ea580c var(--tw-gradient-to-position)}.to-teal-50{--tw-gradient-to:#f0fdfa var(--tw-gradient-to-position)}.p-2{padding:0.5rem}.p-3{padding:0.75rem}.p-4{padding:1rem}.p-6{padding:1.5rem}.p-8{padding:2rem}.px-1{padding-left:0.25rem;padding-right:0.25rem}.px-2{padding-left:0.5rem;padding-right:0.5rem}.px-3{padding-left:0.75rem;padding-right:0.75rem}.px-4{padding-left:1rem;padding-right:1rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.py-1{padding-top:0.25rem;padding-bottom:0.25rem}.py-2{padding-top:0.5rem;padding-bottom:0.5rem}.py-3{padding-top:0.75rem;padding-bottom:0.75rem}.py-6{padding-top:1.5rem;padding-bottom:1.5rem}.pb-10{padding-bottom:2.5rem}.pb-3{padding-bottom:0.75rem}.pl-3{padding-left:0.75rem}.pr-4{padding-right:1rem}.pt-1{padding-top:0.25rem}.pt-10{padding-top:2.5rem}.pt-2{padding-top:0.5rem}.text-center{text-align:center}.text-right{text-align:right}.text-2xl{font-size:1.5rem;line-height:2rem}.text-3xl{font-size:1.875rem;line-height:2.25rem}.text-base{font-size:1rem;line-height:1.5rem}.text-sm{font-size:0.875rem;line-height:1.25rem}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-xs{font-size:0.75rem;line-height:1rem}.font-bold{font-weight:700}.font-medium{font-weight:500}.font-semibold{font-weight:600}.uppercase{text-transform:uppercase}.text-amber-400{--tw-text-opacity:1;color:rgb(251 191 36 / var(--tw-text-opacity, 1))}.text-amber-500{--tw-text-opacity:1;color:rgb(245 158 11 / var(--tw-text-opacity, 1))}.text-blue-500{--tw-text-opacity:1;color:rgb(59 130 246 / var(--tw-text-opacity, 1))}.text-blue-600{--tw-text-opacity:1;color:rgb(37 99 235 / var(--tw-text-opacity, 1))}.text-gray-200{--tw-text-opacity:1;color:rgb(229 231 235 / var(--tw-text-opacity, 1))}.text-gray-400{--tw-text-opacity:1;color:rgb(156 163 175 / var(--tw-text-opacity, 1))}.text-gray-500{--tw-text-opacity:1;color:rgb(107 114 128 / var(--tw-text-opacity, 1))}.text-gray-600{--tw-text-opacity:1;color:rgb(75 85 99 / var(--tw-text-opacity, 1))}.text-gray-700{--tw-text-opacity:1;color:rgb(55 65 81 / var(--tw-text-opacity, 1))}.text-gray-800{--tw-text-opacity:1;color:rgb(31 41 55 / var(--tw-text-opacity, 1))}.text-gray-900{--tw-text-opacity:1;color:rgb(17 24 39 / var(--tw-text-opacity, 1))}.text-green-500{--tw-text-opacity:1;color:rgb(34 197 94 / var(--tw-text-opacity, 1))}.text-green-800{--tw-text-opacity:1;color:rgb(22 101 52 / var(--tw-text-opacity, 1))}.text-primary-600{--tw-text-opacity:1;color:rgb(2 132 199 / var(--tw-text-opacity, 1))}.text-red-500{--tw-text-opacity:1;color:rgb(239 68 68 / var(--tw-text-opacity, 1))}.text-white{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity, 1))}.text-blue-400{--tw-text-opacity:1;color:rgb(96 165 250 / var(--tw-text-opacity, 1))}.opacity-50{opacity:0.5}.shadow{--tw-shadow:0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);--tw-shadow-colored:0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.shadow-md{--tw-shadow:0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.shadow-none{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.shadow-sm{--tw-shadow:0 1px 2px 0 rgb(0 0 0 / 0.05);--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.transition-all{transition-property:all;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms}.transition-colors{transition-property:color, background-color, border-color, fill, stroke, -webkit-text-decoration-color;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, -webkit-text-decoration-color;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms}.duration-200{transition-duration:200ms}.duration-300{transition-duration:300ms}.duration-500{transition-duration:500ms}.ease-out{transition-timing-function:cubic-bezier(0, 0, 0.2, 1)}.hover\:border-blue-400:hover{--tw-border-opacity:1;border-color:rgb(96 165 250 / var(--tw-border-opacity, 1))}.hover\:border-primary-500:hover{--tw-border-opacity:1;border-color:rgb(14 165 233 / var(--tw-border-opacity, 1))}.hover\:bg-blue-50:hover{--tw-bg-opacity:1;background-color:rgb(239 246 255 / var(--tw-bg-opacity, 1))}.hover\:bg-blue-700:hover{--tw-bg-opacity:1;background-color:rgb(29 78 216 / var(--tw-bg-opacity, 1))}.hover\:bg-gray-100:hover{--tw-bg-opacity:1;background-color:rgb(243 244 246 / var(--tw-bg-opacity, 1))}.hover\:bg-gray-50:hover{--tw-bg-opacity:1;background-color:rgb(249 250 251 / var(--tw-bg-opacity, 1))}.hover\:text-gray-500:hover{--tw-text-opacity:1;color:rgb(107 114 128 / var(--tw-text-opacity, 1))}.hover\:text-primary-700:hover{--tw-text-opacity:1;color:rgb(3 105 161 / var(--tw-text-opacity, 1))}.hover\:underline:hover{-webkit-text-decoration-line:underline;text-decoration-line:underline}.focus\:border-blue-500:focus{--tw-border-opacity:1;border-color:rgb(59 130 246 / var(--tw-border-opacity, 1))}.focus\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}.focus\:ring-2:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)}.focus\:ring-inset:focus{--tw-ring-inset:inset}.focus\:ring-blue-500:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(59 130 246 / var(--tw-ring-opacity, 1))}.focus\:ring-primary-500:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(14 165 233 / var(--tw-ring-opacity, 1))}.focus\:ring-offset-2:focus{--tw-ring-offset-width:2px}@media (min-width: 640px){.sm\:ml-6{margin-left:1.5rem}.sm\:flex{display:flex}.sm\:hidden{display:none}.sm\:flex-row{flex-direction:row}.sm\:items-center{align-items:center}.sm\:space-x-8 > :not([hidden]) ~ :not([hidden]){--tw-space-x-reverse:0;margin-right:calc(2rem * var(--tw-space-x-reverse));margin-left:calc(2rem * calc(1 - var(--tw-space-x-reverse)))}.sm\:rounded-lg{border-radius:0.5rem}.sm\:px-6{padding-left:1.5rem;padding-right:1.5rem}.sm\:text-sm{font-size:0.875rem;line-height:1.25rem}}@media (min-width: 768px){.md\:grid-cols-3{grid-template-columns:repeat(3, minmax(0, 1fr))}.md\:flex-row{flex-direction:row}}@media (min-width: 1024px){.lg\:px-8{padding-left:2rem;padding-right:2rem}}</style></head><x-pw-glass style="position: fixed; inset: 0px; z-index: 2147483646; pointer-events: none; display: flex; background-color: transparent;"></x-pw-glass>
<body class="flex flex-col min-h-screen bg-gray-50">
    <!-- Navigation -->
    <nav class="bg-white shadow-sm" x-data="{ mobileMenuOpen: false }">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between h-16">
                <div class="flex">
                    <div class="flex-shrink-0 flex items-center">
                        <a href="/" class="text-primary-600 text-xl font-bold">
                            MyResumo
                        </a>
                    </div>
                    <div class="hidden sm:ml-6 sm:flex sm:space-x-8">
                        <a href="/" class="border-transparent text-gray-500 hover:border-primary-500 hover:text-primary-700 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium">
                            Home
                        </a>
                        <a href="/dashboard" class="border-transparent text-gray-500 hover:border-primary-500 hover:text-primary-700 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium">
                            Dashboard
                        </a>
                        <a href="/create" class="border-transparent text-gray-500 hover:border-primary-500 hover:text-primary-700 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium">
                            Create Resume
                        </a>
                    </div>
                </div>
                <div class="hidden sm:ml-6 sm:flex sm:items-center">
                    <!-- Contribution link in header with GitHub logo -->
                    <a href="/contribution" class="border-transparent text-gray-500 hover:border-primary-500 hover:text-primary-700 inline-flex items-center px-4 py-2 border rounded-md text-sm font-medium ml-3">
                        <!-- GitHub Logo SVG -->
                        <svg class="h-5 w-5 mr-2" viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M12 2C6.477 2 2 6.477 2 12c0 4.42 2.865 8.163 6.839 9.489.5.092.682-.217.682-.482 0-.237-.008-.866-.013-1.7-2.782.603-3.369-1.34-3.369-1.34-.454-1.155-1.11-1.462-1.11-1.462-.908-.62.069-.608.069-.608 1.003.07 1.531 1.03 1.531 1.03.892 1.529 2.341 1.087 2.91.832.092-.646.35-1.086.636-1.336-2.22-.253-4.555-1.11-4.555-4.943 0-1.091.39-1.984 1.029-2.683-.103-.253-.446-1.27.098-2.647 0 0 .84-.268 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.114 2.504.336 1.909-1.294 2.747-1.026 2.747-1.026.546 1.377.202 2.394.1 2.647.64.699 1.028 1.592 1.028 2.683 0 3.842-2.339 4.687-4.566 4.933.359.309.678.919.678 1.852 0 1.336-.012 2.415-.012 2.743 0 .267.18.578.688.48C19.138 20.16 22 16.418 22 12c0-5.523-4.477-10-10-10z"></path>
                        </svg>
                        Contribution
                    </a>
                </div>
                <div class="-mr-2 flex items-center sm:hidden">
                    <!-- Mobile menu button -->
                    <button @click="mobileMenuOpen = !mobileMenuOpen" class="inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-primary-500">
                        <span class="sr-only">Open main menu</span>
                        <!-- Heroicon name: menu (when menu is closed) -->
                        <svg x-show="!mobileMenuOpen" class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
                        </svg>
                        <!-- Heroicon name: x (when menu is open) -->
                        <svg x-show="mobileMenuOpen" class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true" style="display: none;">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>
            </div>
        </div>

        <!-- Mobile menu, show/hide based on menu state -->
        <div x-show="mobileMenuOpen" class="sm:hidden" id="mobile-menu" style="display: none;">
            <div class="pt-2 pb-3 space-y-1">
                <a href="/" class="block pl-3 pr-4 py-2 border-l-4 border-transparent text-base font-medium text-gray-600 hover:bg-gray-50 hover:border-primary-500 hover:text-primary-700">Home</a>
                <a href="/dashboard" class="block pl-3 pr-4 py-2 border-l-4 border-transparent text-base font-medium text-gray-600 hover:bg-gray-50 hover:border-primary-500 hover:text-primary-700">Dashboard</a>
                <a href="/create" class="block pl-3 pr-4 py-2 border-l-4 border-transparent text-base font-medium text-gray-600 hover:bg-gray-50 hover:border-primary-500 hover:text-primary-700">Create Resume</a>
                <a href="/contribution" class="block pl-3 pr-4 py-2 border-l-4 border-transparent text-base font-medium text-gray-600 hover:bg-gray-50 hover:border-primary-500 hover:text-primary-700">
                    <div class="flex items-center">
                        <!-- GitHub Logo SVG -->
                        <svg class="h-5 w-5 mr-2" viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M12 2C6.477 2 2 6.477 2 12c0 4.42 2.865 8.163 6.839 9.489.5.092.682-.217.682-.482 0-.237-.008-.866-.013-1.7-2.782.603-3.369-1.34-3.369-1.34-.454-1.155-1.11-1.462-1.11-1.462-.908-.62.069-.608.069-.608 1.003.07 1.531 1.03 1.531 1.03.892 1.529 2.341 1.087 2.91.832.092-.646.35-1.086.636-1.336-2.22-.253-4.555-1.11-4.555-4.943 0-1.091.39-1.984 1.029-2.683-.103-.253-.446-1.27.098-2.647 0 0 .84-.268 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.114 2.504.336 1.909-1.294 2.747-1.026 2.747-1.026.546 1.377.202 2.394.1 2.647.64.699 1.028 1.592 1.028 2.683 0 3.842-2.339 4.687-4.566 4.933.359.309.678.919.678 1.852 0 1.336-.012 2.415-.012 2.743 0 .267.18.578.688.48C19.138 20.16 22 16.418 22 12c0-5.523-4.477-10-10-10z"></path>
                        </svg>
                        Contribution
                    </div>
                </a>
            </div>
        </div>
    </nav>

    <!-- Main content -->
    <main class="flex-grow">
        
<div class="max-w-5xl mx-auto py-6 px-4 sm:px-6 lg:px-8">
    <h1 class="text-3xl font-bold text-gray-900 mb-8">Create an Optimized Resume</h1>

    <div class="bg-white shadow overflow-hidden sm:rounded-lg p-6" x-data="resumeCreator()" x-init="init()">
        <!-- Progress Stepper -->
        <div class="flex items-center justify-between mb-12">
            <div class="flex items-center">
                <div class="rounded-full h-12 w-12 flex items-center justify-center bg-blue-500 text-white">
                    1
                </div>
                <div class="text-sm font-medium ml-2">Upload</div>
            </div>
            <div class="step-connector" :class="{'active': currentStep >= 2}"></div>
            <div class="flex items-center">
                <div class="rounded-full h-12 w-12 flex items-center justify-center bg-gray-300 text-gray-600" :class="{'bg-blue-500 text-white': currentStep >= 2, 'bg-gray-300 text-gray-600': currentStep < 2}">
                    2
                </div>
                <div class="text-sm font-medium ml-2 text-gray-500" :class="{'text-gray-900': currentStep >= 2, 'text-gray-500': currentStep < 2}">Analyze</div>
            </div>
            <div class="step-connector" :class="{'active': currentStep >= 3}"></div>
            <div class="flex items-center">
                <div class="rounded-full h-12 w-12 flex items-center justify-center bg-gray-300 text-gray-600" :class="{'bg-blue-500 text-white': currentStep >= 3, 'bg-gray-300 text-gray-600': currentStep < 3}">
                    3
                </div>
                <div class="text-sm font-medium ml-2 text-gray-500" :class="{'text-gray-900': currentStep >= 3, 'text-gray-500': currentStep < 3}">Review</div>
            </div>
            <div class="step-connector" :class="{'active': currentStep >= 4}"></div>
            <div class="flex items-center">
                <div class="rounded-full h-12 w-12 flex items-center justify-center bg-gray-300 text-gray-600" :class="{'bg-blue-500 text-white': currentStep >= 4, 'bg-gray-300 text-gray-600': currentStep < 4}">
                    4
                </div>
                <div class="text-sm font-medium ml-2 text-gray-500" :class="{'text-gray-900': currentStep >= 4, 'text-gray-500': currentStep < 4}">Results</div>
            </div>
        </div>

        <!-- Step 1: Upload Resume and Job Description -->
        <div x-show="currentStep === 1" class="fade-in">
            <!-- Upload Section Redesign -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 p-8 rounded-lg mb-8">
                <h2 class="text-xl font-semibold text-gray-800 mb-6">Upload Your Resume</h2>

                <div class="flex flex-col md:flex-row gap-8">
                    <!-- Left: Resume Upload -->
                    <div class="flex-1">
                        <div class="border-2 border-dashed border-gray-300 rounded-lg px-6 pt-10 pb-10 cursor-pointer bg-white transition-all duration-300 hover:border-blue-400 hover:bg-blue-50" :class="{'border-blue-500 bg-blue-50': isDraggingResume, 'border-green-500 bg-green-50': resumeFile}" @dragover.prevent="isDraggingResume = true" @dragleave.prevent="isDraggingResume = false" @drop.prevent="handleResumeDrop($event)">

                            <div class="space-y-3 text-center">
                                <template x-if="!resumeFile">
                                    <div>
                                        <svg class="mx-auto h-16 w-16 text-blue-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                                            <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>
                                        </svg>
                                        <p class="mt-4 text-md text-gray-700 font-medium">
                                            Drag and drop your resume here
                                        </p>
                                        <p class="mt-2 text-sm text-gray-500">
                                            or
                                            <label for="resume-file" class="text-blue-600 hover:underline cursor-pointer">browse files</label>
                                        </p>
                                        <p class="mt-1 text-xs text-gray-500">PDF only (max 5MB)</p>
                                    </div>
                                </template><div>
                                        <svg class="mx-auto h-16 w-16 text-blue-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                                            <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>
                                        </svg>
                                        <p class="mt-4 text-md text-gray-700 font-medium">
                                            Drag and drop your resume here
                                        </p>
                                        <p class="mt-2 text-sm text-gray-500">
                                            or
                                            <label for="resume-file" class="text-blue-600 hover:underline cursor-pointer">browse files</label>
                                        </p>
                                        <p class="mt-1 text-xs text-gray-500">PDF only (max 5MB)</p>
                                    </div>
                                <template x-if="resumeFile">
                                    <div class="text-center">
                                        <svg class="mx-auto h-16 w-16 text-green-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                        </svg>
                                        <p class="mt-4 text-md font-medium text-gray-800" x-text="resumeFile.name"></p>
                                        <p class="mt-1 text-sm text-gray-500" x-text="'Size: ' + (resumeFile.size / 1024).toFixed(2) + ' KB'"></p>
                                        <button type="button" @click.prevent="resumeFile = null; resumeContent = ''" class="mt-3 px-3 py-1 text-sm text-white bg-red-500 hover:bg-red-600 rounded-md shadow-sm transition-colors duration-200">
                                            Remove file
                                        </button>
                                    </div>
                                </template>
                            </div>
                            <input id="resume-file" type="file" accept=".pdf" class="hidden" @change="handleResumeFileChange" style="">
                        </div>
                    </div>

                    <!-- Right: Resume Preview -->
                    <div class="flex-1">
                        <div class="bg-white border border-gray-200 rounded-lg h-full p-4">
                            <h3 class="text-md font-medium text-gray-700 mb-3 flex items-center">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-blue-500" viewBox="0 0 20 20" fill="currentColor">
                                    <path d="M10 12a2 2 0 100-4 2 2 0 000 4z"></path>
                                    <path fill-rule="evenodd" d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z" clip-rule="evenodd"></path>
                                </svg>
                                Resume Preview
                            </h3>

                            <div class="h-48 overflow-y-auto bg-gray-50 border border-gray-200 rounded-md p-3" x-show="resumeContent !== ''" style="display: none;">
                                <p class="text-xs text-gray-700" x-text="resumeContent"></p>
                            </div>

                            <div class="h-48 flex items-center justify-center text-gray-400" x-show="resumeContent === ''">
                                <p class="text-sm">Upload a resume to see preview</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Job Description Section -->
            <div class="bg-gradient-to-r from-green-50 to-teal-50 p-8 rounded-lg">
                <h2 class="text-xl font-semibold text-gray-800 mb-6">Job Description</h2>

                <div class="bg-white border border-gray-200 rounded-lg p-6">
                    <div class="mb-6">
                        <label for="job-title" class="block text-md font-medium text-gray-700 mb-2">
                            Job Title
                        </label>
                        <input type="text" id="job-title" class="block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 sm:text-sm transition-colors duration-200" placeholder="e.g. Senior Software Developer" x-model="jobTitle" style="">
                    </div>

                    <div>
                        <label for="job-description" class="block text-md font-medium text-gray-700 mb-2">
                            Job Description
                            <span class="text-red-500">*</span>
                        </label>
                        <textarea id="job-description" rows="10" class="block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 sm:text-sm transition-colors duration-200" placeholder="Copy and paste the full job description here. The more detailed the description, the better the optimization results." x-model="jobDescription" style=""></textarea>
                        <p class="mt-1 text-xs text-gray-500">
                            This will be used to tailor your resume specifically for this position.
                        </p>
                    </div>

                    <div class="mt-4">
                        <label for="temperature-slider" class="block text-md font-medium text-gray-700 mb-2">
                            Creativity Level
                            <span class="ml-2 text-sm text-gray-500">
                                (Temperature: <span x-text="temperature.toFixed(1)">0.0</span>)
                            </span>
                        </label>
                        <div class="flex items-center gap-3">
                            <span class="text-xs text-gray-500">Conservative</span>
                            <input type="range" id="temperature-slider" min="0" max="1" step="0.1" x-model="temperature" class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer" style="">
                            <span class="text-xs text-gray-500">Creative</span>
                        </div>
                        <p class="mt-1 text-xs text-gray-500">
                            Lower values (0.0) produce more conservative, predictable results. Higher values (1.0) allow more creativity and variation.
                        </p>
                    </div>
                </div>
            </div>

            <div class="mt-8 flex justify-end">
                <button type="button" class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-3 px-6 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 flex items-center transition-colors duration-200 opacity-50 cursor-not-allowed" :class="{'opacity-50 cursor-not-allowed': !canProceedToAnalysis(), 'transform hover:-translate-y-1': canProceedToAnalysis()}" :disabled="!canProceedToAnalysis()" @click="startAnalysis()" disabled="disabled">
                    <span>Analyze Resume</span>
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-2" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                    </svg>
                </button>
            </div>
        </div>

        <!-- Step 2: Analysis In Progress - Redesigned -->
        <div x-show="currentStep === 2" class="fade-in" style="display: none;">
            <div class="bg-gradient-to-br from-blue-50 to-indigo-50 p-8 rounded-lg">
                <div class="max-w-2xl mx-auto">
                    <!-- Analysis Header -->
                    <div class="text-center mb-10">
                        <div class="relative">
                            <div class="animate-pulse absolute inset-0 rounded-full bg-blue-200 opacity-50 transform scale-110"></div>
                            <div class="animate-spin relative rounded-full h-20 w-20 border-t-4 border-r-4 border-blue-500 border-opacity-80 mx-auto"></div>
                            <div class="absolute inset-0 flex items-center justify-center">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-blue-600" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <path d="M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z"></path>
                                </svg>
                            </div>
                        </div>
                        <h3 class="text-2xl font-bold text-gray-900 mt-8 mb-2">Optimizing Your Resume</h3>
                        <p class="text-gray-600 max-w-md mx-auto">
                            Our AI is analyzing your resume against the job description to create a perfectly tailored version.
                        </p>
                    </div>

                    <!-- Analysis Progress -->
                    <div class="bg-white rounded-lg shadow-md p-6 mb-8">
                        <!-- Progress Bar -->
                        <div class="relative pt-1">
                            <div class="flex mb-2 items-center justify-between">
                                <div>
                                    <span class="text-xs font-semibold inline-block py-1 px-2 uppercase rounded-full text-blue-600 bg-blue-100">
                                        Analysis Progress
                                    </span>
                                </div>
                                <div class="text-right">
                                    <span class="text-xs font-semibold inline-block text-blue-600" x-text="`${analysisProgress}%`">0%</span>
                                </div>
                            </div>
                            <div class="overflow-hidden h-2 mb-4 text-xs flex rounded-full bg-blue-100">
                                <div :style="`width: ${analysisProgress}%`" class="shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-gradient-to-r from-blue-500 to-indigo-600 transition-all duration-500 ease-out" style="width: 0%">
                                </div>
                            </div>
                        </div>

                        <!-- Status Messages -->
                        <div class="mt-6 space-y-4">
                            <div class="flex items-center text-gray-400" :class="{'text-gray-400': analysisProgress < 25, 'text-blue-600': analysisProgress >= 25}">
                                <div class="flex-shrink-0 h-8 w-8 rounded-full border-2 flex items-center justify-center border-gray-300" :class="{'border-gray-300': analysisProgress < 25, 'border-blue-500 bg-blue-50': analysisProgress >= 25}">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" :class="{'text-gray-400': analysisProgress < 25, 'text-blue-600': analysisProgress >= 25}">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 8h10M7 12h4m1 8l-4-4H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-3l-4 4z"></path>
                                    </svg>
                                </div>
                                <span class="ml-4 text-sm font-medium">Processing resume text</span>
                            </div>

                            <div class="flex items-center text-gray-400" :class="{'text-gray-400': analysisProgress < 40, 'text-blue-600': analysisProgress >= 40}">
                                <div class="flex-shrink-0 h-8 w-8 rounded-full border-2 flex items-center justify-center border-gray-300" :class="{'border-gray-300': analysisProgress < 40, 'border-blue-500 bg-blue-50': analysisProgress >= 40}">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" :class="{'text-gray-400': analysisProgress < 40, 'text-blue-600': analysisProgress >= 40}">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01"></path>
                                    </svg>
                                </div>
                                <span class="ml-4 text-sm font-medium">Analyzing job requirements</span>
                            </div>

                            <div class="flex items-center text-gray-400" :class="{'text-gray-400': analysisProgress < 65, 'text-blue-600': analysisProgress >= 65}">
                                <div class="flex-shrink-0 h-8 w-8 rounded-full border-2 flex items-center justify-center border-gray-300" :class="{'border-gray-300': analysisProgress < 65, 'border-blue-500 bg-blue-50': analysisProgress >= 65}">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" :class="{'text-gray-400': analysisProgress < 65, 'text-blue-600': analysisProgress >= 65}">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"></path>
                                    </svg>
                                </div>
                                <span class="ml-4 text-sm font-medium">Optimizing content</span>
                            </div>

                            <div class="flex items-center text-gray-400" :class="{'text-gray-400': analysisProgress < 85, 'text-blue-600': analysisProgress >= 85}">
                                <div class="flex-shrink-0 h-8 w-8 rounded-full border-2 flex items-center justify-center border-gray-300" :class="{'border-gray-300': analysisProgress < 85, 'border-blue-500 bg-blue-50': analysisProgress >= 85}">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" :class="{'text-gray-400': analysisProgress < 85, 'text-blue-600': analysisProgress >= 85}">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                                    </svg>
                                </div>
                                <span class="ml-4 text-sm font-medium">Finalizing your resume</span>
                            </div>
                        </div>
                    </div>

                    <!-- Current Activity -->
                    <div class="text-center">
                        <div class="inline-flex items-center px-4 py-2 bg-white border border-blue-100 rounded-full shadow-sm">
                            <div class="animate-pulse w-2 h-2 bg-blue-600 rounded-full mr-3"></div>
                            <p class="text-sm text-gray-700" x-text="analysisProgressMessage">Initializing...</p>
                        </div>

                        <div class="mt-6 text-xs text-gray-500">
                            <p>This typically takes about 30-60 seconds</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Step 3: Initial Analysis Results -->
        <div x-show="currentStep === 3" class="fade-in" style="display: none;">
            <div class="bg-gradient-to-br from-amber-50 to-orange-50 p-6 rounded-lg mb-6">
                <div class="text-center mb-5">
                    <svg class="mx-auto" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="40" height="40" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
                        <polyline points="22 4 12 14.01 9 11.01"></polyline>
                    </svg>
                    <h3 class="text-xl font-bold text-gray-900 mt-3 mb-1">Initial Resume Analysis</h3>
                    <p class="text-gray-600 text-sm">Here's how your resume currently matches with the job description.</p>
                </div>

                <!-- Results Cards - Grid Layout -->
                <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6">
                    <!-- ATS Score -->
                    <div class="bg-white rounded-lg shadow-md overflow-hidden border border-gray-200">
                        <div class="bg-gradient-to-r from-amber-500 to-amber-600 px-4 py-3">
                            <h4 class="font-medium text-white">Initial ATS Score</h4>
                        </div>
                        <div class="p-4 text-center">
                            <div class="relative inline-flex items-center justify-center">
                                <!-- Score Circle -->
                                <svg class="w-28 h-28">
                                    <circle class="text-gray-200" stroke-width="8" stroke="currentColor" fill="transparent" r="50" cx="56" cy="56"></circle>
                                    <circle class="text-amber-500" stroke-width="8" :stroke-dasharray="calculateCircumference(50)" :stroke-dashoffset="calculateCircumference(50) - (calculateCircumference(50) * originalScore) / 100" stroke-linecap="round" stroke="currentColor" fill="transparent" r="50" cx="56" cy="56" stroke-dasharray="314.1592653589793" stroke-dashoffset="314.1592653589793"></circle>
                                </svg>
                                <span class="absolute text-2xl font-bold" x-text="`${originalScore}%`">0%</span>
                            </div>
                            <p class="mt-2 text-sm text-gray-600">
                                <template x-if="originalScore >= 80">
                                    <span>Your resume already has excellent compatibility!</span>
                                </template>
                                <template x-if="originalScore >= 60 &amp;&amp; originalScore < 80">
                                    <span>Your resume has good compatibility, but can be improved.</span>
                                </template>
                                <template x-if="originalScore < 60">
                                    <span>Your resume needs improvement to better match this job.</span>
                                </template><span>Your resume needs improvement to better match this job.</span>
                            </p>
                        </div>
                    </div>

                    <!-- Matched Skills -->
                    <div class="bg-white rounded-lg shadow-md overflow-hidden border border-gray-200">
                        <div class="bg-gradient-to-r from-green-500 to-green-600 px-4 py-3">
                            <h4 class="font-medium text-white">Matched Skills</h4>
                        </div>
                        <div class="p-4 h-full">
                            <div class="flex flex-wrap gap-2">
                                <template x-for="skill in matchedSkills" :key="skill">
                                    <span class="px-2 py-1 rounded-full text-xs bg-green-100 text-green-800" x-text="skill"></span>
                                </template>
                            </div>
                            <template x-if="matchedSkills.length === 0">
                                <p class="text-sm text-gray-500">No skills directly matched.</p>
                            </template><p class="text-sm text-gray-500">No skills directly matched.</p>
                        </div>
                    </div>

                    <!-- Missing Skills -->
                    <div class="bg-white rounded-lg shadow-md overflow-hidden border border-gray-200">
                        <div class="bg-gradient-to-r from-orange-500 to-orange-600 px-4 py-3">
                            <h4 class="font-medium text-white">Missing Skills</h4>
                        </div>
                        <div class="p-4 h-full">
                            <div class="flex flex-wrap gap-2">
                                <template x-for="skill in missingSkills" :key="skill">
                                    <span class="px-2 py-1 rounded-full text-xs bg-orange-100 text-orange-800" x-text="skill"></span>
                                </template>
                            </div>
                            <template x-if="missingSkills.length === 0">
                                <p class="text-sm text-gray-500">No critical skills are missing.</p>
                            </template><p class="text-sm text-gray-500">No critical skills are missing.</p>
                        </div>
                    </div>
                </div>

                <!-- AI Recommendation and Continue Button -->
                <div class="bg-white rounded-lg shadow-md overflow-hidden border border-gray-200 mb-6">
                    <div class="bg-gradient-to-r from-indigo-500 to-indigo-600 px-4 py-3">
                        <h4 class="font-medium text-white">AI Recommendation</h4>
                    </div>
                    <div class="p-4">
                        <p class="text-gray-700 text-sm mb-4" x-text="recommendation || 'Our AI will optimize your resume to improve its compatibility with this job description.'">Our AI will optimize your resume to improve its compatibility with this job description.</p>
                    </div>
                </div>

                <!-- Continue to Optimization Button -->
                <div class="flex justify-center">
                    <button type="button" class="inline-flex items-center justify-center px-6 py-3 border border-transparent font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200" @click="optimizeResume()">
                        <span>Optimize My Resume</span>
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-2" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M10.293 15.707a1 1 0 010-1.414L14.586 10l-4.293-4.293a1 1 0 111.414-1.414l5 5a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
                            <path fill-rule="evenodd" d="M4.293 15.707a1 1 0 010-1.414L8.586 10 4.293 5.707a1 1 0 011.414-1.414l5 5a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
                        </svg>
                    </button>
                </div>
            </div>
        </div>

        <!-- Step 4: Final Optimized Results -->
        <div x-show="currentStep === 4" class="fade-in" style="display: none;">
            <!-- Compact success indicator -->
            <div class="bg-gradient-to-br from-green-50 to-teal-50 p-6 rounded-lg mb-6">
                <div class="text-center mb-5">
                    <!-- Reduced vertical spacing -->
                    <svg class="checkmark mx-auto" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 52 52" style="height: 40px; width: 40px;">
                        <circle class="checkmark__circle" cx="26" cy="26" r="25" fill="none"></circle>
                        <path class="checkmark__check" fill="none" d="M14.1 27.2l7.1 7.2 16.7-16.8"></path>
                    </svg>
                    <h3 class="text-xl font-bold text-gray-900 mt-3 mb-1">Resume Optimization Complete!</h3>
                    <p class="text-gray-600 text-sm">Your resume has been optimized to maximize compatibility with the job description.</p>
                </div>

                <!-- Final Score Card -->
                <div class="bg-white rounded-lg shadow-md overflow-hidden border border-gray-200 mb-6 max-w-md mx-auto">
                    <div class="bg-gradient-to-r from-blue-500 to-blue-600 px-4 py-3">
                        <h4 class="font-medium text-white">Final ATS Compatibility Score</h4>
                    </div>
                    <div class="p-6 text-center">
                        <div class="flex items-center justify-center mb-4">
                            <!-- Score Comparison -->
                            <div class="relative inline-flex items-center justify-center mr-6">
                                <!-- Original Score Circle -->
                                <svg class="w-24 h-24">
                                    <circle class="text-gray-200" stroke-width="8" stroke="currentColor" fill="transparent" r="42" cx="48" cy="48"></circle>
                                    <circle class="text-amber-400" stroke-width="8" :stroke-dasharray="calculateCircumference(42)" :stroke-dashoffset="calculateCircumference(42) - (calculateCircumference(42) * originalScore) / 100" stroke-linecap="round" stroke="currentColor" fill="transparent" r="42" cx="48" cy="48" stroke-dasharray="263.89378290154264" stroke-dashoffset="263.89378290154264"></circle>
                                </svg>
                                <div class="absolute text-center">
                                    <span class="block text-xl font-bold" x-text="`${originalScore}%`">0%</span>
                                    <span class="block text-xs text-gray-500">Original</span>
                                </div>
                            </div>

                            <!-- Arrow -->
                            <div class="mx-1">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-blue-500" viewBox="0 0 20 20" fill="currentColor">
                                    <path fill-rule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                                </svg>
                            </div>

                            <!-- Optimized Score Circle -->
                            <div class="relative inline-flex items-center justify-center ml-6">
                                <svg class="w-24 h-24">
                                    <circle class="text-gray-200" stroke-width="8" stroke="currentColor" fill="transparent" r="42" cx="48" cy="48"></circle>
                                    <circle class="text-green-500" stroke-width="8" :stroke-dasharray="calculateCircumference(42)" :stroke-dashoffset="calculateCircumference(42) - (calculateCircumference(42) * matchScore) / 100" stroke-linecap="round" stroke="currentColor" fill="transparent" r="42" cx="48" cy="48" stroke-dasharray="263.89378290154264" stroke-dashoffset="263.89378290154264"></circle>
                                </svg>
                                <div class="absolute text-center">
                                    <span class="block text-xl font-bold" x-text="`${matchScore}%`">0%</span>
                                    <span class="block text-xs text-gray-500">Optimized</span>
                                </div>
                            </div>
                        </div>

                        <div class="mt-4 text-center" x-show="matchScore > originalScore" style="display: none;">
                            <div class="inline-flex items-center px-3 py-1 rounded-full bg-green-100 text-green-800 text-sm font-medium">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 10l7-7m0 0l7 7m-7-7v18"></path>
                                </svg>
                                <span x-text="`+${(matchScore - originalScore).toFixed(0)}% improvement`">+0% improvement</span>
                            </div>
                        </div>

                        <p class="mt-4 text-sm text-gray-700">
                            <template x-if="matchScore >= 80">
                                <span>Excellent! Your optimized resume is highly compatible with this position.</span>
                            </template>
                            <template x-if="matchScore >= 60 &amp;&amp; matchScore < 80">
                                <span>Good match! Your optimized resume aligns well with the job requirements.</span>
                            </template>
                            <template x-if="matchScore < 60">
                                <span>Your resume has been improved but may need further customization for this role.</span>
                            </template><span>Your resume has been improved but may need further customization for this role.</span>
                        </p>
                    </div>
                </div>

                <!-- Actions Card - Full Width -->
                <div class="bg-white rounded-lg shadow-md overflow-hidden border border-gray-200">
                    <div class="bg-gradient-to-r from-gray-100 to-gray-200 px-4 py-3">
                        <h4 class="font-medium text-gray-700">Actions</h4>
                    </div>
                    <div class="p-4 flex flex-col sm:flex-row justify-center gap-4">
                        <button type="button" class="inline-flex items-center justify-center px-6 py-3 border border-transparent font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200" @click="downloadOptimizedResume()">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                            </svg>
                            Download Optimized Resume
                        </button>
                        <button type="button" class="inline-flex items-center justify-center px-6 py-3 border border-gray-300 shadow-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200" @click="resetAndStartOver()">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z" clip-rule="evenodd"></path>
                            </svg>
                            Start Over
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

    </main>

    <!-- Flash messages -->
    

    <!-- Alpine.js and other scripts -->
    <script src="http://localhost:8081/static/js/script.js"></script>
    
<script>
    function resumeCreator() {
        return {
            currentStep: 1,
            resumeFile: null,
            resumeContent: '',
            resumeId: null,
            jobTitle: '',
            jobDescription: '',
            temperature: 0.0,
            isDraggingResume: false,
            isUploading: false,
            isAnalyzing: false,
            analysisProgress: 0,
            analysisProgressMessage: 'Initializing...',
            matchScore: 0,
            matchedSkills: [],
            missingSkills: [],
            originalScore: 0,
            recommendation: '',
            // PDF preview properties
            resumePreviewLoaded: false,
            resumePreviewType: 'pdf', // Can be 'pdf' or 'structured'
            resumePreviewUrl: '',
            previewData: null,

            init() {
                // Initialize the component
                this.resetProgressInterval = null;

                // Listen for escape key to exit full screen PDF view if implemented
                window.addEventListener('keydown', (e) => {
                    if (e.key === 'Escape' && this.isFullScreenPreview) {
                        this.isFullScreenPreview = false;
                    }
                });
            },

            // Handle resume file drag & drop and file input
            handleResumeDrop(event) {
                this.isDraggingResume = false;
                const file = event.dataTransfer.files[0];
                if (file && file.type === 'application/pdf' && file.size <= 5 * 1024 * 1024) {
                    this.resumeFile = file;
                    this.uploadResumeFile();
                }
            },

            handleResumeFileChange(event) {
                const file = event.target.files[0];
                if (file && file.type === 'application/pdf' && file.size <= 5 * 1024 * 1024) {
                    this.resumeFile = file;
                    this.uploadResumeFile();
                }
            },

            // Upload the resume file to the backend
            async uploadResumeFile() {
                if (!this.resumeFile) return;

                this.isUploading = true;

                // Create a FormData object to send the file
                const formData = new FormData();
                formData.append('file', this.resumeFile);
                formData.append('title', this.resumeFile.name.replace('.pdf', ''));
                formData.append('job_description', ''); // Will be updated later when we analyze
                formData.append('user_id', 'temp-user-id'); // In a real app, you'd use the logged-in user's ID

                try {
                    const response = await fetch('/api/resume/', {
                        method: 'POST',
                        body: formData
                    });

                    if (!response.ok) {
                        throw new Error('Failed to upload resume');
                    }

                    const data = await response.json();
                    this.resumeId = data.id;

                    // Fetch the resume to get the extracted content
                    const resumeResponse = await fetch(`/api/resume/${this.resumeId}`);
                    if (resumeResponse.ok) {
                        const resumeData = await resumeResponse.json();
                        this.resumeContent = resumeData.original_content;
                    }

                } catch (error) {
                    console.error('Error uploading resume:', error);
                    window.showErrorToast('Failed to upload resume. Please try again.');
                } finally {
                    this.isUploading = false;
                }
            },

            // Check if we can proceed to analysis
            canProceedToAnalysis() {
                return (this.resumeFile && this.resumeContent && this.resumeId) &&
                     this.jobDescription.trim().length > 0 && !this.isUploading;
            },

            // Start the analysis process
            async startAnalysis() {
                if (!this.canProceedToAnalysis()) return;

                this.currentStep = 2;
                this.isAnalyzing = true;

                // Start progress animation
                this.startProgressSimulation();

                // Send the job description for optimization
                try {
                    const response = await fetch(`/api/resume/${this.resumeId}/optimize`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            job_description: this.jobDescription,
                            job_title: this.jobTitle || undefined,
                            temperature: parseFloat(this.temperature)
                        })
                    });

                    if (!response.ok) {
                        throw new Error('Failed to optimize resume');
                    }

                    const data = await response.json();

                    // Update match score with the optimized ATS score
                    this.matchScore = data.optimized_ats_score || 65;

                    // Use the matching_skills and missing_skills directly from the API response
                    this.matchedSkills = data.matching_skills || [];
                    this.missingSkills = data.missing_skills || [];

                    // Set up the PDF preview
                    this.setupResumePreview(data);

                    // Update original score and recommendation
                    this.originalScore = data.original_ats_score || 50;
                    this.recommendation = data.recommendation || '';

                    // Complete the progress simulation
                    clearInterval(this.resetProgressInterval);
                    this.analysisProgress = 100;
                    this.analysisProgressMessage = 'Analysis complete!';

                    // Move to results step after a short delay
                    setTimeout(() => {
                        this.currentStep = 3;
                        this.isAnalyzing = false;
                    }, 500);

                } catch (error) {
                    console.error('Error optimizing resume:', error);
                    window.showErrorToast('Failed to upload resume. Please try again.');
                    this.currentStep = 1;
                    this.isAnalyzing = false;
                    clearInterval(this.resetProgressInterval);
                }
            },

            // Set up the resume preview based on available data
            setupResumePreview(data) {
                this.resumePreviewLoaded = false;

                // Check if PDF is available
                if (data.optimized_pdf_url) {
                    this.resumePreviewType = 'pdf';
                    this.resumePreviewUrl = data.optimized_pdf_url;

                    // In development environment, we might not have real PDF URLs,
                    // so we fallback to the structured view if needed
                    if (!this.resumePreviewUrl || this.resumePreviewUrl === '#') {
                        // For demo purposes, you could use a sample PDF if available
                        this.resumePreviewUrl = `/api/resume/${this.resumeId}/download?use_optimized=true`;

                        // Set a timeout to simulate PDF loading
                        setTimeout(() => {
                            this.resumePreviewLoaded = true;
                        }, 1500);
                    } else {
                        // Setup onload handler for real PDF URL
                        // This will happen naturally through the @load directive in the template
                    }
                } else if (data.optimized_data) {
                    // If no PDF but structured data is available
                    this.resumePreviewType = 'structured';
                    this.previewData = data.optimized_data;

                    // Set a timeout to simulate loading
                    setTimeout(() => {
                        this.resumePreviewLoaded = true;
                    }, 1000);
                } else {
                    // Neither available - show error state
                    this.resumePreviewType = 'structured';
                    this.previewData = {
                        user_information: {
                            name: 'Preview Not Available',
                            main_job_title: 'Please download the resume to view',
                            profile_description: 'The resume preview could not be generated. Please use the download button to view your optimized resume.'
                        }
                    };

                    setTimeout(() => {
                        this.resumePreviewLoaded = true;
                    }, 1000);
                }
            },

            // Simulate progress animation during analysis
            startProgressSimulation() {
                this.analysisProgress = 0;
                this.analysisProgressMessage = 'Processing resume text...';

                this.resetProgressInterval = setInterval(() => {
                    if (this.analysisProgress < 95) {
                        this.analysisProgress += Math.floor(Math.random() * 15);
                        if (this.analysisProgress > 95) this.analysisProgress = 95;

                        // Update progress message based on progress
                        if (this.analysisProgress < 30) {
                            this.analysisProgressMessage = 'Extracting key information...';
                        } else if (this.analysisProgress < 60) {
                            this.analysisProgressMessage = 'Analyzing job requirements...';
                        } else if (this.analysisProgress < 80) {
                            this.analysisProgressMessage = 'Optimizing content...';
                        } else {
                            this.analysisProgressMessage = 'Finalizing your resume...';
                        }
                    }
                }, 1000);
            },

            // Download the optimized resume as PDF
            async downloadOptimizedResume() {
                if (!this.resumeId) return;

                try {
                    // Open the download URL in a new tab
                    window.open(`/api/resume/${this.resumeId}/download?use_optimized=true`, '_blank');
                } catch (error) {
                    console.error('Error downloading resume:', error);
                    window.showErrorToast('Failed to download resume. Please try again.');
                }
            },

            // Reset the form and start over
            resetAndStartOver() {
                this.currentStep = 1;
                this.resumeFile = null;
                this.resumeContent = '';
                this.jobTitle = '';
                this.jobDescription = '';
                this.temperature = 0.0;
                this.isDraggingResume = false;
                this.isAnalyzing = false;
                this.matchScore = 0;
                this.matchedSkills = [];
                this.missingSkills = [];
                this.resumePreviewLoaded = false;
                this.resumePreviewUrl = '';
                this.previewData = null;
            },

            // Calculate circumference for SVG circle animation
            calculateCircumference(radius) {
                return 2 * Math.PI * radius;
            },

            // Handle optimization action after reviewing initial analysis
            optimizeResume() {
                // Show loading state while transitioning to final results
                this.isAnalyzing = true;

                // We already have all the data from the initial API call,
                // so we can just transition to the results step
                setTimeout(() => {
                    this.currentStep = 4;
                    this.isAnalyzing = false;
                }, 800); // Small delay for visual feedback
            },
        }
    }
</script>


</body></html>